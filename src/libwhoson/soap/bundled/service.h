/* service.h
   Generated by wsdl2h 2.8.19 from service.wsdl and typemap.dat
   2015-02-19 23:50:06 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2000-2014 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Notes

@note HINTS:
 - Run soapcpp2 on service.h to generate the SOAP/XML processing logic.
   Use soapcpp2 -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 -j to generate improved proxy and server classes.
 - Use wsdl2h -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h -R to generate REST operations.
 - Use wsdl2h -nname to use name as the base namespace prefix instead of 'ns'.
 - Use wsdl2h -Nname for service prefix and produce multiple service bindings
 - Use wsdl2h -d to enable DOM support for xsd:anyType.
 - Use wsdl2h -g to auto-generate readers and writers for root elements.
 - Use wsdl2h -b to auto-generate bi-directional operations (duplex ops).
 - Struct/class members serialized as XML attributes are annotated with a '@'.
 - Struct/class members that have a special role are annotated with a '$'.

@warning
   DO NOT INCLUDE THIS ANNOTATED FILE DIRECTLY IN YOUR PROJECT SOURCE CODE.
   USE THE FILES GENERATED BY soapcpp2 FOR YOUR PROJECT'S SOURCE CODE:
   THE soapStub.h FILE CONTAINS THIS CONTENT WITHOUT ANNOTATIONS.

@copyright LICENSE:
@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2014, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following licenses:
GPL or Genivia's license for commercial use.
--------------------------------------------------------------------------------
GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org

This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial-use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt w

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *   http://nowise.se/schemas/whoson                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


// STL vector containers (use option -s to remove STL dependency)
#import "stlvector.h"

/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

WhosOn = "http://nowise.se/schemas/whoson"

*/

#define SOAP_NAMESPACE_OF_WhosOn	"http://nowise.se/schemas/whoson"
//gsoap WhosOn schema namespace:	http://nowise.se/schemas/whoson
//gsoap WhosOn schema elementForm:	qualified
//gsoap WhosOn schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Forward Declarations                                                       *
 *                                                                            *
\******************************************************************************/


//  Forward declaration of class WhosOn__LogonEvent.
class WhosOn__LogonEvent;

//  Forward declaration of class WhosOn__ArrayOfLogonEvent.
class WhosOn__ArrayOfLogonEvent;

//  Forward declaration of class _WhosOn__CreateLogonEvent.
class _WhosOn__CreateLogonEvent;

//  Forward declaration of class _WhosOn__CreateLogonEventResponse.
class _WhosOn__CreateLogonEventResponse;

//  Forward declaration of class _WhosOn__CloseLogonEvent.
class _WhosOn__CloseLogonEvent;

//  Forward declaration of class _WhosOn__CloseLogonEventResponse.
class _WhosOn__CloseLogonEventResponse;

//  Forward declaration of class _WhosOn__DeleteLogonEvent.
class _WhosOn__DeleteLogonEvent;

//  Forward declaration of class _WhosOn__DeleteLogonEventResponse.
class _WhosOn__DeleteLogonEventResponse;

//  Forward declaration of class _WhosOn__FindLogonEvent.
class _WhosOn__FindLogonEvent;

//  Forward declaration of class _WhosOn__FindLogonEventResponse.
class _WhosOn__FindLogonEventResponse;

//  Forward declaration of class _WhosOn__FindLogonEvents.
class _WhosOn__FindLogonEvents;

//  Forward declaration of class _WhosOn__FindLogonEventsResponse.
class _WhosOn__FindLogonEventsResponse;


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://nowise.se/schemas/whoson                                               *
 *                                                                            *
\******************************************************************************/

/// @brief "http://nowise.se/schemas/whoson":LogonEventMatch is a simpleType restriction of XSD type xs:string.
///
enum WhosOn__LogonEventMatch
{
	Before,	///< xs:string value="Before"
	Between,	///< xs:string value="Between"
	After,	///< xs:string value="After"
	Exact,	///< xs:string value="Exact"
	Active,	///< xs:string value="Active"
	Closed,	///< xs:string value="Closed"
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://nowise.se/schemas/whoson                                               *
 *                                                                            *
\******************************************************************************/

/// @brief "http://nowise.se/schemas/whoson":LogonEvent is a complexType.
///
/// class WhosOn__LogonEvent operations:
/// - soap_new_WhosOn__LogonEvent(soap*) allocate
/// - soap_new_WhosOn__LogonEvent(soap*, int num) allocate array
/// - soap_new_req_WhosOn__LogonEvent(soap*, ...) allocate, set required members
/// - soap_new_set_WhosOn__LogonEvent(soap*, ...) allocate, set all public members
/// - int soap_read_WhosOn__LogonEvent(soap*, WhosOn__LogonEvent*) deserialize from a stream
/// - int soap_write_WhosOn__LogonEvent(soap, WhosOn__LogonEvent*) serialize to a stream
class WhosOn__LogonEvent
{ public:
/// Element "EventID" of XSD type xs:int.
    int                                  EventID                        1;	///< Required element.
/// Element "Username" of XSD type xs:string.
    std::string                          Username                       0;	///< Optional element.
/// Element "Domain" of XSD type xs:string.
    std::string                          Domain                         0;	///< Optional element.
/// Element "HwAddress" of XSD type xs:string.
    std::string                          HwAddress                      0;	///< Optional element.
/// Element "IpAddress" of XSD type xs:string.
    std::string                          IpAddress                      0;	///< Optional element.
/// Element "Hostname" of XSD type xs:string.
    std::string                          Hostname                       0;	///< Optional element.
/// Element "Workstation" of XSD type xs:string.
    std::string                          Workstation                    0;	///< Optional element.
/// Element "StartTime" of XSD type xs:dateTime.
    time_t                               StartTime                      1;	///< Required element.
/// Element "EndTime" of XSD type xs:dateTime.
    time_t                               EndTime                        1;	///< Required element.
/// Element "FirstID" of XSD type xs:int.
    int                                  FirstID                        1;	///< Required element.
/// Element "LastID" of XSD type xs:int.
    int                                  LastID                         1;	///< Required element.
/// Element "Limit" of XSD type xs:int.
    int                                  Limit                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief "http://nowise.se/schemas/whoson":ArrayOfLogonEvent is a complexType.
///
/// class WhosOn__ArrayOfLogonEvent operations:
/// - soap_new_WhosOn__ArrayOfLogonEvent(soap*) allocate
/// - soap_new_WhosOn__ArrayOfLogonEvent(soap*, int num) allocate array
/// - soap_new_req_WhosOn__ArrayOfLogonEvent(soap*, ...) allocate, set required members
/// - soap_new_set_WhosOn__ArrayOfLogonEvent(soap*, ...) allocate, set all public members
/// - int soap_read_WhosOn__ArrayOfLogonEvent(soap*, WhosOn__ArrayOfLogonEvent*) deserialize from a stream
/// - int soap_write_WhosOn__ArrayOfLogonEvent(soap, WhosOn__ArrayOfLogonEvent*) serialize to a stream
class WhosOn__ArrayOfLogonEvent
{ public:
/// Vector of WhosOn__LogonEvent* of length 0..unbounded.
    std::vector<WhosOn__LogonEvent*    > LogonEvent                     0;
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://nowise.se/schemas/whoson":CreateLogonEvent
/// @brief "http://nowise.se/schemas/whoson":CreateLogonEvent is a complexType.
///
/// class _WhosOn__CreateLogonEvent operations:
/// - soap_new__WhosOn__CreateLogonEvent(soap*) allocate
/// - soap_new__WhosOn__CreateLogonEvent(soap*, int num) allocate array
/// - soap_new_req__WhosOn__CreateLogonEvent(soap*, ...) allocate, set required members
/// - soap_new_set__WhosOn__CreateLogonEvent(soap*, ...) allocate, set all public members
/// - int soap_read__WhosOn__CreateLogonEvent(soap*, _WhosOn__CreateLogonEvent*) deserialize from a stream
/// - int soap_write__WhosOn__CreateLogonEvent(soap, _WhosOn__CreateLogonEvent*) serialize to a stream
class _WhosOn__CreateLogonEvent
{ public:
/// Element "user" of XSD type xs:string.
    std::string                          user                           0;	///< Optional element.
/// Element "domain" of XSD type xs:string.
    std::string                          domain                         0;	///< Optional element.
/// Element "computer" of XSD type xs:string.
    std::string                          computer                       0;	///< Optional element.
/// Element "hwaddr" of XSD type xs:string.
    std::string                          hwaddr                         0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://nowise.se/schemas/whoson":CreateLogonEventResponse
/// @brief "http://nowise.se/schemas/whoson":CreateLogonEventResponse is a complexType.
///
/// class _WhosOn__CreateLogonEventResponse operations:
/// - soap_new__WhosOn__CreateLogonEventResponse(soap*) allocate
/// - soap_new__WhosOn__CreateLogonEventResponse(soap*, int num) allocate array
/// - soap_new_req__WhosOn__CreateLogonEventResponse(soap*, ...) allocate, set required members
/// - soap_new_set__WhosOn__CreateLogonEventResponse(soap*, ...) allocate, set all public members
/// - int soap_read__WhosOn__CreateLogonEventResponse(soap*, _WhosOn__CreateLogonEventResponse*) deserialize from a stream
/// - int soap_write__WhosOn__CreateLogonEventResponse(soap, _WhosOn__CreateLogonEventResponse*) serialize to a stream
class _WhosOn__CreateLogonEventResponse
{ public:
/// Element "CreateLogonEventResult" of XSD type xs:int.
    int                                  CreateLogonEventResult         1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://nowise.se/schemas/whoson":CloseLogonEvent
/// @brief "http://nowise.se/schemas/whoson":CloseLogonEvent is a complexType.
///
/// class _WhosOn__CloseLogonEvent operations:
/// - soap_new__WhosOn__CloseLogonEvent(soap*) allocate
/// - soap_new__WhosOn__CloseLogonEvent(soap*, int num) allocate array
/// - soap_new_req__WhosOn__CloseLogonEvent(soap*, ...) allocate, set required members
/// - soap_new_set__WhosOn__CloseLogonEvent(soap*, ...) allocate, set all public members
/// - int soap_read__WhosOn__CloseLogonEvent(soap*, _WhosOn__CloseLogonEvent*) deserialize from a stream
/// - int soap_write__WhosOn__CloseLogonEvent(soap, _WhosOn__CloseLogonEvent*) serialize to a stream
class _WhosOn__CloseLogonEvent
{ public:
/// Element "eventID" of XSD type xs:int.
    int                                  eventID                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://nowise.se/schemas/whoson":CloseLogonEventResponse
/// @brief "http://nowise.se/schemas/whoson":CloseLogonEventResponse is a complexType.
///
/// class _WhosOn__CloseLogonEventResponse operations:
/// - soap_new__WhosOn__CloseLogonEventResponse(soap*) allocate
/// - soap_new__WhosOn__CloseLogonEventResponse(soap*, int num) allocate array
/// - soap_new_req__WhosOn__CloseLogonEventResponse(soap*, ...) allocate, set required members
/// - soap_new_set__WhosOn__CloseLogonEventResponse(soap*, ...) allocate, set all public members
/// - int soap_read__WhosOn__CloseLogonEventResponse(soap*, _WhosOn__CloseLogonEventResponse*) deserialize from a stream
/// - int soap_write__WhosOn__CloseLogonEventResponse(soap, _WhosOn__CloseLogonEventResponse*) serialize to a stream
class _WhosOn__CloseLogonEventResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://nowise.se/schemas/whoson":DeleteLogonEvent
/// @brief "http://nowise.se/schemas/whoson":DeleteLogonEvent is a complexType.
///
/// class _WhosOn__DeleteLogonEvent operations:
/// - soap_new__WhosOn__DeleteLogonEvent(soap*) allocate
/// - soap_new__WhosOn__DeleteLogonEvent(soap*, int num) allocate array
/// - soap_new_req__WhosOn__DeleteLogonEvent(soap*, ...) allocate, set required members
/// - soap_new_set__WhosOn__DeleteLogonEvent(soap*, ...) allocate, set all public members
/// - int soap_read__WhosOn__DeleteLogonEvent(soap*, _WhosOn__DeleteLogonEvent*) deserialize from a stream
/// - int soap_write__WhosOn__DeleteLogonEvent(soap, _WhosOn__DeleteLogonEvent*) serialize to a stream
class _WhosOn__DeleteLogonEvent
{ public:
/// Element "eventID" of XSD type xs:int.
    int                                  eventID                        1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://nowise.se/schemas/whoson":DeleteLogonEventResponse
/// @brief "http://nowise.se/schemas/whoson":DeleteLogonEventResponse is a complexType.
///
/// class _WhosOn__DeleteLogonEventResponse operations:
/// - soap_new__WhosOn__DeleteLogonEventResponse(soap*) allocate
/// - soap_new__WhosOn__DeleteLogonEventResponse(soap*, int num) allocate array
/// - soap_new_req__WhosOn__DeleteLogonEventResponse(soap*, ...) allocate, set required members
/// - soap_new_set__WhosOn__DeleteLogonEventResponse(soap*, ...) allocate, set all public members
/// - int soap_read__WhosOn__DeleteLogonEventResponse(soap*, _WhosOn__DeleteLogonEventResponse*) deserialize from a stream
/// - int soap_write__WhosOn__DeleteLogonEventResponse(soap, _WhosOn__DeleteLogonEventResponse*) serialize to a stream
class _WhosOn__DeleteLogonEventResponse
{ public:
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://nowise.se/schemas/whoson":FindLogonEvent
/// @brief "http://nowise.se/schemas/whoson":FindLogonEvent is a complexType.
///
/// class _WhosOn__FindLogonEvent operations:
/// - soap_new__WhosOn__FindLogonEvent(soap*) allocate
/// - soap_new__WhosOn__FindLogonEvent(soap*, int num) allocate array
/// - soap_new_req__WhosOn__FindLogonEvent(soap*, ...) allocate, set required members
/// - soap_new_set__WhosOn__FindLogonEvent(soap*, ...) allocate, set all public members
/// - int soap_read__WhosOn__FindLogonEvent(soap*, _WhosOn__FindLogonEvent*) deserialize from a stream
/// - int soap_write__WhosOn__FindLogonEvent(soap, _WhosOn__FindLogonEvent*) serialize to a stream
class _WhosOn__FindLogonEvent
{ public:
/// Element "user" of XSD type xs:string.
    std::string                          user                           0;	///< Optional element.
/// Element "domain" of XSD type xs:string.
    std::string                          domain                         0;	///< Optional element.
/// Element "computer" of XSD type xs:string.
    std::string                          computer                       0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://nowise.se/schemas/whoson":FindLogonEventResponse
/// @brief "http://nowise.se/schemas/whoson":FindLogonEventResponse is a complexType.
///
/// class _WhosOn__FindLogonEventResponse operations:
/// - soap_new__WhosOn__FindLogonEventResponse(soap*) allocate
/// - soap_new__WhosOn__FindLogonEventResponse(soap*, int num) allocate array
/// - soap_new_req__WhosOn__FindLogonEventResponse(soap*, ...) allocate, set required members
/// - soap_new_set__WhosOn__FindLogonEventResponse(soap*, ...) allocate, set all public members
/// - int soap_read__WhosOn__FindLogonEventResponse(soap*, _WhosOn__FindLogonEventResponse*) deserialize from a stream
/// - int soap_write__WhosOn__FindLogonEventResponse(soap, _WhosOn__FindLogonEventResponse*) serialize to a stream
class _WhosOn__FindLogonEventResponse
{ public:
/// Element "FindLogonEventResult" of XSD type "http://nowise.se/schemas/whoson":LogonEvent.
    WhosOn__LogonEvent*                  FindLogonEventResult           1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://nowise.se/schemas/whoson":FindLogonEvents
/// @brief "http://nowise.se/schemas/whoson":FindLogonEvents is a complexType.
///
/// class _WhosOn__FindLogonEvents operations:
/// - soap_new__WhosOn__FindLogonEvents(soap*) allocate
/// - soap_new__WhosOn__FindLogonEvents(soap*, int num) allocate array
/// - soap_new_req__WhosOn__FindLogonEvents(soap*, ...) allocate, set required members
/// - soap_new_set__WhosOn__FindLogonEvents(soap*, ...) allocate, set all public members
/// - int soap_read__WhosOn__FindLogonEvents(soap*, _WhosOn__FindLogonEvents*) deserialize from a stream
/// - int soap_write__WhosOn__FindLogonEvents(soap, _WhosOn__FindLogonEvents*) serialize to a stream
class _WhosOn__FindLogonEvents
{ public:
/// Element "filter" of XSD type "http://nowise.se/schemas/whoson":LogonEvent.
    WhosOn__LogonEvent*                  filter                         1;	///< Required element.
/// Element "match" of XSD type "http://nowise.se/schemas/whoson":LogonEventMatch.
    enum WhosOn__LogonEventMatch         match                          1;	///< Required element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://nowise.se/schemas/whoson":FindLogonEventsResponse
/// @brief "http://nowise.se/schemas/whoson":FindLogonEventsResponse is a complexType.
///
/// class _WhosOn__FindLogonEventsResponse operations:
/// - soap_new__WhosOn__FindLogonEventsResponse(soap*) allocate
/// - soap_new__WhosOn__FindLogonEventsResponse(soap*, int num) allocate array
/// - soap_new_req__WhosOn__FindLogonEventsResponse(soap*, ...) allocate, set required members
/// - soap_new_set__WhosOn__FindLogonEventsResponse(soap*, ...) allocate, set all public members
/// - int soap_read__WhosOn__FindLogonEventsResponse(soap*, _WhosOn__FindLogonEventsResponse*) deserialize from a stream
/// - int soap_write__WhosOn__FindLogonEventsResponse(soap, _WhosOn__FindLogonEventsResponse*) serialize to a stream
class _WhosOn__FindLogonEventsResponse
{ public:
/// Element "FindLogonEventsResult" of XSD type "http://nowise.se/schemas/whoson":ArrayOfLogonEvent.
    WhosOn__ArrayOfLogonEvent*           FindLogonEventsResult          0;	///< Optional element.
/// A handle to the soap struct that manages this instance (automatically set).
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://nowise.se/schemas/whoson                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://nowise.se/schemas/whoson                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/

// This service supports SOAP 1.2 namespaces:
#import "soap12.h"

//gsoap LogonAccountingServiceSoap service name:	LogonAccountingServiceSoap 
//gsoap LogonAccountingServiceSoap service type:	LogonAccountingServiceSoap 
//gsoap LogonAccountingServiceSoap service port:	http://localhost/websvc/whoson/LogonAccountingService.asmx 
//gsoap LogonAccountingServiceSoap service namespace:	http://nowise.se/schemas/whoson/LogonAccountingServiceSoap 
//gsoap LogonAccountingServiceSoap service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap LogonAccountingServiceSoap2 service name:	LogonAccountingServiceSoap12 
//gsoap LogonAccountingServiceSoap2 service type:	LogonAccountingServiceSoap 
//gsoap LogonAccountingServiceSoap2 service port:	http://localhost/websvc/whoson/LogonAccountingService.asmx 
//gsoap LogonAccountingServiceSoap2 service namespace:	http://nowise.se/schemas/whoson/LogonAccountingServiceSoap12 
//gsoap LogonAccountingServiceSoap2 service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings

  - @ref LogonAccountingServiceSoap

  - @ref LogonAccountingServiceSoap12

@section Service_more More Information

  - @ref page_notes "Notes"

  - @ref page_XMLDataBinding "XML Data Binding"

  - @ref SOAP_ENV__Header "SOAP Header Content" (when applicable)

  - @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page LogonAccountingServiceSoap Binding "LogonAccountingServiceSoap"

@section LogonAccountingServiceSoap_operations Operations of Binding "LogonAccountingServiceSoap"

  - @ref __LogonAccountingServiceSoap__CreateLogonEvent

  - @ref __LogonAccountingServiceSoap__CloseLogonEvent

  - @ref __LogonAccountingServiceSoap__DeleteLogonEvent

  - @ref __LogonAccountingServiceSoap__FindLogonEvent

  - @ref __LogonAccountingServiceSoap__FindLogonEvents

@section LogonAccountingServiceSoap_ports Endpoints of Binding "LogonAccountingServiceSoap"

  - http://localhost/websvc/whoson/LogonAccountingService.asmx


*/

/**

@page LogonAccountingServiceSoap12 Binding "LogonAccountingServiceSoap12"

@section LogonAccountingServiceSoap12_operations Operations of Binding "LogonAccountingServiceSoap12"

  - @ref __LogonAccountingServiceSoap2__CreateLogonEvent

  - @ref __LogonAccountingServiceSoap2__CloseLogonEvent

  - @ref __LogonAccountingServiceSoap2__DeleteLogonEvent

  - @ref __LogonAccountingServiceSoap2__FindLogonEvent

  - @ref __LogonAccountingServiceSoap2__FindLogonEvents

@section LogonAccountingServiceSoap12_ports Endpoints of Binding "LogonAccountingServiceSoap12"

  - http://localhost/websvc/whoson/LogonAccountingService.asmx


*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   LogonAccountingServiceSoap                                               *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __LogonAccountingServiceSoap__CreateLogonEvent                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__LogonAccountingServiceSoap__CreateLogonEvent" of service binding "LogonAccountingServiceSoap".
Creates and return the ID of an logon session. The computer argument is the NetBIOS
name.

  - SOAP document/literal style messaging

  - Action: "http://nowise.se/schemas/whoson/CreateLogonEvent"

  - Addressing input action: "http://nowise.se/schemas/whoson/CreateLogonEvent"

  - Addressing output action: "http://nowise.se/schemas/whoson/CreateLogonEventResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___LogonAccountingServiceSoap__CreateLogonEvent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _WhosOn__CreateLogonEvent*          WhosOn__CreateLogonEvent,
    // output parameters:
    _WhosOn__CreateLogonEventResponse*  WhosOn__CreateLogonEventResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __LogonAccountingServiceSoap__CreateLogonEvent(
    struct soap *soap,
    // input parameters:
    _WhosOn__CreateLogonEvent*          WhosOn__CreateLogonEvent,
    // output parameters:
    _WhosOn__CreateLogonEventResponse*  WhosOn__CreateLogonEventResponse
  );
@endcode

C++ proxy class (defined in soapLogonAccountingServiceSoapProxy.h):
@code
  class LogonAccountingServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapLogonAccountingServiceSoapService.h):
@code
  class LogonAccountingServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap LogonAccountingServiceSoap service method-protocol:	CreateLogonEvent SOAP
//gsoap LogonAccountingServiceSoap service method-style:	CreateLogonEvent document
//gsoap LogonAccountingServiceSoap service method-encoding:	CreateLogonEvent literal
//gsoap LogonAccountingServiceSoap service method-input-action:	CreateLogonEvent http://nowise.se/schemas/whoson/CreateLogonEvent
//gsoap LogonAccountingServiceSoap service method-output-action:	CreateLogonEvent http://nowise.se/schemas/whoson/CreateLogonEventResponse
int __LogonAccountingServiceSoap__CreateLogonEvent(
    _WhosOn__CreateLogonEvent*          WhosOn__CreateLogonEvent,	///< Input parameter
    _WhosOn__CreateLogonEventResponse*  WhosOn__CreateLogonEventResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __LogonAccountingServiceSoap__CloseLogonEvent                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__LogonAccountingServiceSoap__CloseLogonEvent" of service binding "LogonAccountingServiceSoap".
Close an existing logon session identified by the event ID

  - SOAP document/literal style messaging

  - Action: "http://nowise.se/schemas/whoson/CloseLogonEvent"

  - Addressing input action: "http://nowise.se/schemas/whoson/CloseLogonEvent"

  - Addressing output action: "http://nowise.se/schemas/whoson/CloseLogonEventResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___LogonAccountingServiceSoap__CloseLogonEvent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _WhosOn__CloseLogonEvent*           WhosOn__CloseLogonEvent,
    // output parameters:
    _WhosOn__CloseLogonEventResponse*   WhosOn__CloseLogonEventResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __LogonAccountingServiceSoap__CloseLogonEvent(
    struct soap *soap,
    // input parameters:
    _WhosOn__CloseLogonEvent*           WhosOn__CloseLogonEvent,
    // output parameters:
    _WhosOn__CloseLogonEventResponse*   WhosOn__CloseLogonEventResponse
  );
@endcode

C++ proxy class (defined in soapLogonAccountingServiceSoapProxy.h):
@code
  class LogonAccountingServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapLogonAccountingServiceSoapService.h):
@code
  class LogonAccountingServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap LogonAccountingServiceSoap service method-protocol:	CloseLogonEvent SOAP
//gsoap LogonAccountingServiceSoap service method-style:	CloseLogonEvent document
//gsoap LogonAccountingServiceSoap service method-encoding:	CloseLogonEvent literal
//gsoap LogonAccountingServiceSoap service method-input-action:	CloseLogonEvent http://nowise.se/schemas/whoson/CloseLogonEvent
//gsoap LogonAccountingServiceSoap service method-output-action:	CloseLogonEvent http://nowise.se/schemas/whoson/CloseLogonEventResponse
int __LogonAccountingServiceSoap__CloseLogonEvent(
    _WhosOn__CloseLogonEvent*           WhosOn__CloseLogonEvent,	///< Input parameter
    _WhosOn__CloseLogonEventResponse*   WhosOn__CloseLogonEventResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __LogonAccountingServiceSoap__DeleteLogonEvent                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__LogonAccountingServiceSoap__DeleteLogonEvent" of service binding "LogonAccountingServiceSoap".
Deletes the logon event identified by the event ID.

  - SOAP document/literal style messaging

  - Action: "http://nowise.se/schemas/whoson/DeleteLogonEvent"

  - Addressing input action: "http://nowise.se/schemas/whoson/DeleteLogonEvent"

  - Addressing output action: "http://nowise.se/schemas/whoson/DeleteLogonEventResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___LogonAccountingServiceSoap__DeleteLogonEvent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _WhosOn__DeleteLogonEvent*          WhosOn__DeleteLogonEvent,
    // output parameters:
    _WhosOn__DeleteLogonEventResponse*  WhosOn__DeleteLogonEventResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __LogonAccountingServiceSoap__DeleteLogonEvent(
    struct soap *soap,
    // input parameters:
    _WhosOn__DeleteLogonEvent*          WhosOn__DeleteLogonEvent,
    // output parameters:
    _WhosOn__DeleteLogonEventResponse*  WhosOn__DeleteLogonEventResponse
  );
@endcode

C++ proxy class (defined in soapLogonAccountingServiceSoapProxy.h):
@code
  class LogonAccountingServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapLogonAccountingServiceSoapService.h):
@code
  class LogonAccountingServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap LogonAccountingServiceSoap service method-protocol:	DeleteLogonEvent SOAP
//gsoap LogonAccountingServiceSoap service method-style:	DeleteLogonEvent document
//gsoap LogonAccountingServiceSoap service method-encoding:	DeleteLogonEvent literal
//gsoap LogonAccountingServiceSoap service method-input-action:	DeleteLogonEvent http://nowise.se/schemas/whoson/DeleteLogonEvent
//gsoap LogonAccountingServiceSoap service method-output-action:	DeleteLogonEvent http://nowise.se/schemas/whoson/DeleteLogonEventResponse
int __LogonAccountingServiceSoap__DeleteLogonEvent(
    _WhosOn__DeleteLogonEvent*          WhosOn__DeleteLogonEvent,	///< Input parameter
    _WhosOn__DeleteLogonEventResponse*  WhosOn__DeleteLogonEventResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __LogonAccountingServiceSoap__FindLogonEvent                             *
 *                                                                            *
\******************************************************************************/


/** Operation "__LogonAccountingServiceSoap__FindLogonEvent" of service binding "LogonAccountingServiceSoap".
Find and return the logon event matching the request parameters.

  - SOAP document/literal style messaging

  - Action: "http://nowise.se/schemas/whoson/FindLogonEvent"

  - Addressing input action: "http://nowise.se/schemas/whoson/FindLogonEvent"

  - Addressing output action: "http://nowise.se/schemas/whoson/FindLogonEventResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___LogonAccountingServiceSoap__FindLogonEvent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _WhosOn__FindLogonEvent*            WhosOn__FindLogonEvent,
    // output parameters:
    _WhosOn__FindLogonEventResponse*    WhosOn__FindLogonEventResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __LogonAccountingServiceSoap__FindLogonEvent(
    struct soap *soap,
    // input parameters:
    _WhosOn__FindLogonEvent*            WhosOn__FindLogonEvent,
    // output parameters:
    _WhosOn__FindLogonEventResponse*    WhosOn__FindLogonEventResponse
  );
@endcode

C++ proxy class (defined in soapLogonAccountingServiceSoapProxy.h):
@code
  class LogonAccountingServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapLogonAccountingServiceSoapService.h):
@code
  class LogonAccountingServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap LogonAccountingServiceSoap service method-protocol:	FindLogonEvent SOAP
//gsoap LogonAccountingServiceSoap service method-style:	FindLogonEvent document
//gsoap LogonAccountingServiceSoap service method-encoding:	FindLogonEvent literal
//gsoap LogonAccountingServiceSoap service method-input-action:	FindLogonEvent http://nowise.se/schemas/whoson/FindLogonEvent
//gsoap LogonAccountingServiceSoap service method-output-action:	FindLogonEvent http://nowise.se/schemas/whoson/FindLogonEventResponse
int __LogonAccountingServiceSoap__FindLogonEvent(
    _WhosOn__FindLogonEvent*            WhosOn__FindLogonEvent,	///< Input parameter
    _WhosOn__FindLogonEventResponse*    WhosOn__FindLogonEventResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __LogonAccountingServiceSoap__FindLogonEvents                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__LogonAccountingServiceSoap__FindLogonEvents" of service binding "LogonAccountingServiceSoap".
Find and return all logon events matching the filter and match options.

  - SOAP document/literal style messaging

  - Action: "http://nowise.se/schemas/whoson/FindLogonEvents"

  - Addressing input action: "http://nowise.se/schemas/whoson/FindLogonEvents"

  - Addressing output action: "http://nowise.se/schemas/whoson/FindLogonEventsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___LogonAccountingServiceSoap__FindLogonEvents(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _WhosOn__FindLogonEvents*           WhosOn__FindLogonEvents,
    // output parameters:
    _WhosOn__FindLogonEventsResponse*   WhosOn__FindLogonEventsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __LogonAccountingServiceSoap__FindLogonEvents(
    struct soap *soap,
    // input parameters:
    _WhosOn__FindLogonEvents*           WhosOn__FindLogonEvents,
    // output parameters:
    _WhosOn__FindLogonEventsResponse*   WhosOn__FindLogonEventsResponse
  );
@endcode

C++ proxy class (defined in soapLogonAccountingServiceSoapProxy.h):
@code
  class LogonAccountingServiceSoapProxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapLogonAccountingServiceSoapService.h):
@code
  class LogonAccountingServiceSoapService;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap LogonAccountingServiceSoap service method-protocol:	FindLogonEvents SOAP
//gsoap LogonAccountingServiceSoap service method-style:	FindLogonEvents document
//gsoap LogonAccountingServiceSoap service method-encoding:	FindLogonEvents literal
//gsoap LogonAccountingServiceSoap service method-input-action:	FindLogonEvents http://nowise.se/schemas/whoson/FindLogonEvents
//gsoap LogonAccountingServiceSoap service method-output-action:	FindLogonEvents http://nowise.se/schemas/whoson/FindLogonEventsResponse
int __LogonAccountingServiceSoap__FindLogonEvents(
    _WhosOn__FindLogonEvents*           WhosOn__FindLogonEvents,	///< Input parameter
    _WhosOn__FindLogonEventsResponse*   WhosOn__FindLogonEventsResponse	///< Output parameter
);

/**

@page LogonAccountingServiceSoap Binding "LogonAccountingServiceSoap"

@section LogonAccountingServiceSoap_policy_enablers Policy Enablers of Binding "LogonAccountingServiceSoap"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   LogonAccountingServiceSoap12                                             *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __LogonAccountingServiceSoap2__CreateLogonEvent                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__LogonAccountingServiceSoap2__CreateLogonEvent" of service binding "LogonAccountingServiceSoap12".
Creates and return the ID of an logon session. The computer argument is the NetBIOS
name.

  - SOAP document/literal style messaging

  - Action: "http://nowise.se/schemas/whoson/CreateLogonEvent"

  - Addressing input action: "http://nowise.se/schemas/whoson/CreateLogonEvent"

  - Addressing output action: "http://nowise.se/schemas/whoson/CreateLogonEventResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___LogonAccountingServiceSoap2__CreateLogonEvent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _WhosOn__CreateLogonEvent*          WhosOn__CreateLogonEvent,
    // output parameters:
    _WhosOn__CreateLogonEventResponse*  WhosOn__CreateLogonEventResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __LogonAccountingServiceSoap2__CreateLogonEvent(
    struct soap *soap,
    // input parameters:
    _WhosOn__CreateLogonEvent*          WhosOn__CreateLogonEvent,
    // output parameters:
    _WhosOn__CreateLogonEventResponse*  WhosOn__CreateLogonEventResponse
  );
@endcode

C++ proxy class (defined in soapLogonAccountingServiceSoap12Proxy.h):
@code
  class LogonAccountingServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapLogonAccountingServiceSoap12Service.h):
@code
  class LogonAccountingServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap LogonAccountingServiceSoap2 service method-protocol:	CreateLogonEvent SOAP
//gsoap LogonAccountingServiceSoap2 service method-style:	CreateLogonEvent document
//gsoap LogonAccountingServiceSoap2 service method-encoding:	CreateLogonEvent literal
//gsoap LogonAccountingServiceSoap2 service method-input-action:	CreateLogonEvent http://nowise.se/schemas/whoson/CreateLogonEvent
//gsoap LogonAccountingServiceSoap2 service method-output-action:	CreateLogonEvent http://nowise.se/schemas/whoson/CreateLogonEventResponse
int __LogonAccountingServiceSoap2__CreateLogonEvent(
    _WhosOn__CreateLogonEvent*          WhosOn__CreateLogonEvent,	///< Input parameter
    _WhosOn__CreateLogonEventResponse*  WhosOn__CreateLogonEventResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __LogonAccountingServiceSoap2__CloseLogonEvent                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__LogonAccountingServiceSoap2__CloseLogonEvent" of service binding "LogonAccountingServiceSoap12".
Close an existing logon session identified by the event ID

  - SOAP document/literal style messaging

  - Action: "http://nowise.se/schemas/whoson/CloseLogonEvent"

  - Addressing input action: "http://nowise.se/schemas/whoson/CloseLogonEvent"

  - Addressing output action: "http://nowise.se/schemas/whoson/CloseLogonEventResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___LogonAccountingServiceSoap2__CloseLogonEvent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _WhosOn__CloseLogonEvent*           WhosOn__CloseLogonEvent,
    // output parameters:
    _WhosOn__CloseLogonEventResponse*   WhosOn__CloseLogonEventResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __LogonAccountingServiceSoap2__CloseLogonEvent(
    struct soap *soap,
    // input parameters:
    _WhosOn__CloseLogonEvent*           WhosOn__CloseLogonEvent,
    // output parameters:
    _WhosOn__CloseLogonEventResponse*   WhosOn__CloseLogonEventResponse
  );
@endcode

C++ proxy class (defined in soapLogonAccountingServiceSoap12Proxy.h):
@code
  class LogonAccountingServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapLogonAccountingServiceSoap12Service.h):
@code
  class LogonAccountingServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap LogonAccountingServiceSoap2 service method-protocol:	CloseLogonEvent SOAP
//gsoap LogonAccountingServiceSoap2 service method-style:	CloseLogonEvent document
//gsoap LogonAccountingServiceSoap2 service method-encoding:	CloseLogonEvent literal
//gsoap LogonAccountingServiceSoap2 service method-input-action:	CloseLogonEvent http://nowise.se/schemas/whoson/CloseLogonEvent
//gsoap LogonAccountingServiceSoap2 service method-output-action:	CloseLogonEvent http://nowise.se/schemas/whoson/CloseLogonEventResponse
int __LogonAccountingServiceSoap2__CloseLogonEvent(
    _WhosOn__CloseLogonEvent*           WhosOn__CloseLogonEvent,	///< Input parameter
    _WhosOn__CloseLogonEventResponse*   WhosOn__CloseLogonEventResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __LogonAccountingServiceSoap2__DeleteLogonEvent                          *
 *                                                                            *
\******************************************************************************/


/** Operation "__LogonAccountingServiceSoap2__DeleteLogonEvent" of service binding "LogonAccountingServiceSoap12".
Deletes the logon event identified by the event ID.

  - SOAP document/literal style messaging

  - Action: "http://nowise.se/schemas/whoson/DeleteLogonEvent"

  - Addressing input action: "http://nowise.se/schemas/whoson/DeleteLogonEvent"

  - Addressing output action: "http://nowise.se/schemas/whoson/DeleteLogonEventResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___LogonAccountingServiceSoap2__DeleteLogonEvent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _WhosOn__DeleteLogonEvent*          WhosOn__DeleteLogonEvent,
    // output parameters:
    _WhosOn__DeleteLogonEventResponse*  WhosOn__DeleteLogonEventResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __LogonAccountingServiceSoap2__DeleteLogonEvent(
    struct soap *soap,
    // input parameters:
    _WhosOn__DeleteLogonEvent*          WhosOn__DeleteLogonEvent,
    // output parameters:
    _WhosOn__DeleteLogonEventResponse*  WhosOn__DeleteLogonEventResponse
  );
@endcode

C++ proxy class (defined in soapLogonAccountingServiceSoap12Proxy.h):
@code
  class LogonAccountingServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapLogonAccountingServiceSoap12Service.h):
@code
  class LogonAccountingServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap LogonAccountingServiceSoap2 service method-protocol:	DeleteLogonEvent SOAP
//gsoap LogonAccountingServiceSoap2 service method-style:	DeleteLogonEvent document
//gsoap LogonAccountingServiceSoap2 service method-encoding:	DeleteLogonEvent literal
//gsoap LogonAccountingServiceSoap2 service method-input-action:	DeleteLogonEvent http://nowise.se/schemas/whoson/DeleteLogonEvent
//gsoap LogonAccountingServiceSoap2 service method-output-action:	DeleteLogonEvent http://nowise.se/schemas/whoson/DeleteLogonEventResponse
int __LogonAccountingServiceSoap2__DeleteLogonEvent(
    _WhosOn__DeleteLogonEvent*          WhosOn__DeleteLogonEvent,	///< Input parameter
    _WhosOn__DeleteLogonEventResponse*  WhosOn__DeleteLogonEventResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __LogonAccountingServiceSoap2__FindLogonEvent                            *
 *                                                                            *
\******************************************************************************/


/** Operation "__LogonAccountingServiceSoap2__FindLogonEvent" of service binding "LogonAccountingServiceSoap12".
Find and return the logon event matching the request parameters.

  - SOAP document/literal style messaging

  - Action: "http://nowise.se/schemas/whoson/FindLogonEvent"

  - Addressing input action: "http://nowise.se/schemas/whoson/FindLogonEvent"

  - Addressing output action: "http://nowise.se/schemas/whoson/FindLogonEventResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___LogonAccountingServiceSoap2__FindLogonEvent(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _WhosOn__FindLogonEvent*            WhosOn__FindLogonEvent,
    // output parameters:
    _WhosOn__FindLogonEventResponse*    WhosOn__FindLogonEventResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __LogonAccountingServiceSoap2__FindLogonEvent(
    struct soap *soap,
    // input parameters:
    _WhosOn__FindLogonEvent*            WhosOn__FindLogonEvent,
    // output parameters:
    _WhosOn__FindLogonEventResponse*    WhosOn__FindLogonEventResponse
  );
@endcode

C++ proxy class (defined in soapLogonAccountingServiceSoap12Proxy.h):
@code
  class LogonAccountingServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapLogonAccountingServiceSoap12Service.h):
@code
  class LogonAccountingServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap LogonAccountingServiceSoap2 service method-protocol:	FindLogonEvent SOAP
//gsoap LogonAccountingServiceSoap2 service method-style:	FindLogonEvent document
//gsoap LogonAccountingServiceSoap2 service method-encoding:	FindLogonEvent literal
//gsoap LogonAccountingServiceSoap2 service method-input-action:	FindLogonEvent http://nowise.se/schemas/whoson/FindLogonEvent
//gsoap LogonAccountingServiceSoap2 service method-output-action:	FindLogonEvent http://nowise.se/schemas/whoson/FindLogonEventResponse
int __LogonAccountingServiceSoap2__FindLogonEvent(
    _WhosOn__FindLogonEvent*            WhosOn__FindLogonEvent,	///< Input parameter
    _WhosOn__FindLogonEventResponse*    WhosOn__FindLogonEventResponse	///< Output parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __LogonAccountingServiceSoap2__FindLogonEvents                           *
 *                                                                            *
\******************************************************************************/


/** Operation "__LogonAccountingServiceSoap2__FindLogonEvents" of service binding "LogonAccountingServiceSoap12".
Find and return all logon events matching the filter and match options.

  - SOAP document/literal style messaging

  - Action: "http://nowise.se/schemas/whoson/FindLogonEvents"

  - Addressing input action: "http://nowise.se/schemas/whoson/FindLogonEvents"

  - Addressing output action: "http://nowise.se/schemas/whoson/FindLogonEventsResponse"

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___LogonAccountingServiceSoap2__FindLogonEvents(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // input parameters:
    _WhosOn__FindLogonEvents*           WhosOn__FindLogonEvents,
    // output parameters:
    _WhosOn__FindLogonEventsResponse*   WhosOn__FindLogonEventsResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __LogonAccountingServiceSoap2__FindLogonEvents(
    struct soap *soap,
    // input parameters:
    _WhosOn__FindLogonEvents*           WhosOn__FindLogonEvents,
    // output parameters:
    _WhosOn__FindLogonEventsResponse*   WhosOn__FindLogonEventsResponse
  );
@endcode

C++ proxy class (defined in soapLogonAccountingServiceSoap12Proxy.h):
@code
  class LogonAccountingServiceSoap12Proxy;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use proxy classes;

C++ service class (defined in soapLogonAccountingServiceSoap12Service.h):
@code
  class LogonAccountingServiceSoap12Service;
@endcode
Important: use soapcpp2 option '-j' (or '-i') to generate improved and easy-to-use service classes;

*/

//gsoap LogonAccountingServiceSoap2 service method-protocol:	FindLogonEvents SOAP
//gsoap LogonAccountingServiceSoap2 service method-style:	FindLogonEvents document
//gsoap LogonAccountingServiceSoap2 service method-encoding:	FindLogonEvents literal
//gsoap LogonAccountingServiceSoap2 service method-input-action:	FindLogonEvents http://nowise.se/schemas/whoson/FindLogonEvents
//gsoap LogonAccountingServiceSoap2 service method-output-action:	FindLogonEvents http://nowise.se/schemas/whoson/FindLogonEventsResponse
int __LogonAccountingServiceSoap2__FindLogonEvents(
    _WhosOn__FindLogonEvents*           WhosOn__FindLogonEvents,	///< Input parameter
    _WhosOn__FindLogonEventsResponse*   WhosOn__FindLogonEventsResponse	///< Output parameter
);

/**

@page LogonAccountingServiceSoap12 Binding "LogonAccountingServiceSoap12"

@section LogonAccountingServiceSoap12_policy_enablers Policy Enablers of Binding "LogonAccountingServiceSoap12"

Based on policies, this service imports

  - WS-Policy reminders and enablers:
    - WS-Addressing 1.0 (2005/08, accepts 2004/08):
	@code
	#import "wsa5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-Addressing (2004/08):
	@code
	#import "wsa.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsaapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	// See the user guide gsoap/doc/wsa/html/index.html
	@endcode
    - WS-ReliableMessaging 1.0:
	@code
	#import "wsrm5.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-ReliableMessaging 1.1:
	@code
	#import "wsrm.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsrmapi.h"
	soap_register_plugin(soap, soap_wsa); // register the wsa plugin in your code
	soap_register_plugin(soap, soap_wsrm); // register the wsrm plugin in your code
	// See the user guide gsoap/doc/wsrm/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.0 (accepts 1.1):
	@code
	#import "wsse.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - WS-Security (SOAP Message Security) 1.1 (accepts 1.0):
	@code
	#import "wsse11.h" // to be added to this header file for the soapcpp2 build step
	@endcode
	@code
	#include "plugin/wsseapi.h"
	soap_register_plugin(soap, soap_wsse); // register the wsse plugin in your code
	// See the user guide gsoap/doc/wsse/html/index.html
	@endcode
    - HTTP Digest Authentication:
	@code
	#include "plugin/httpda.h"
	soap_register_plugin(soap, soap_http_da); // register the HTTP DA plugin in your code
	// See the user guide gsoap/doc/httpda/html/index.html
	@endcode
*/


/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-
generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings
are adopted from XML schemas as part of the WSDL types section or when running
wsdl2h on a set of schemas to produce non-SOAP-based XML data bindings.

The following readers and writers are C/C++ data type (de)serializers auto-
generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the
(de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in
your code to import these data type and function declarations. Only use the
soapcpp2-generated files in your project build. Do not include the wsdl2h-
generated .h file in your code.

Data can be read in XML and deserialized from:
  - a file descriptor, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

Data can be serialized in XML and written to:
  - a file descriptor, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback

The following options are available for (de)serialization control:
  - soap->encodingStyle = NULL; to remove SOAP 1.1/1.2 encodingStyle
  - soap_mode(soap, SOAP_XML_TREE); XML without id-ref (no cycles!)
  - soap_mode(soap, SOAP_XML_GRAPH); XML with id-ref (including cycles)
  - soap_set_namespaces(soap, struct Namespace *nsmap); to set xmlns bindings


@section WhosOn Top-level root elements of schema "http://nowise.se/schemas/whoson"

  - <CreateLogonEvent> @ref _WhosOn__CreateLogonEvent
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__WhosOn__CreateLogonEvent(struct soap*, _WhosOn__CreateLogonEvent*);
    // Writer (returns SOAP_OK on success):
    soap_write__WhosOn__CreateLogonEvent(struct soap*, _WhosOn__CreateLogonEvent*);
    @endcode

  - <CreateLogonEventResponse> @ref _WhosOn__CreateLogonEventResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__WhosOn__CreateLogonEventResponse(struct soap*, _WhosOn__CreateLogonEventResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__WhosOn__CreateLogonEventResponse(struct soap*, _WhosOn__CreateLogonEventResponse*);
    @endcode

  - <CloseLogonEvent> @ref _WhosOn__CloseLogonEvent
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__WhosOn__CloseLogonEvent(struct soap*, _WhosOn__CloseLogonEvent*);
    // Writer (returns SOAP_OK on success):
    soap_write__WhosOn__CloseLogonEvent(struct soap*, _WhosOn__CloseLogonEvent*);
    @endcode

  - <CloseLogonEventResponse> @ref _WhosOn__CloseLogonEventResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__WhosOn__CloseLogonEventResponse(struct soap*, _WhosOn__CloseLogonEventResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__WhosOn__CloseLogonEventResponse(struct soap*, _WhosOn__CloseLogonEventResponse*);
    @endcode

  - <DeleteLogonEvent> @ref _WhosOn__DeleteLogonEvent
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__WhosOn__DeleteLogonEvent(struct soap*, _WhosOn__DeleteLogonEvent*);
    // Writer (returns SOAP_OK on success):
    soap_write__WhosOn__DeleteLogonEvent(struct soap*, _WhosOn__DeleteLogonEvent*);
    @endcode

  - <DeleteLogonEventResponse> @ref _WhosOn__DeleteLogonEventResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__WhosOn__DeleteLogonEventResponse(struct soap*, _WhosOn__DeleteLogonEventResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__WhosOn__DeleteLogonEventResponse(struct soap*, _WhosOn__DeleteLogonEventResponse*);
    @endcode

  - <FindLogonEvent> @ref _WhosOn__FindLogonEvent
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__WhosOn__FindLogonEvent(struct soap*, _WhosOn__FindLogonEvent*);
    // Writer (returns SOAP_OK on success):
    soap_write__WhosOn__FindLogonEvent(struct soap*, _WhosOn__FindLogonEvent*);
    @endcode

  - <FindLogonEventResponse> @ref _WhosOn__FindLogonEventResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__WhosOn__FindLogonEventResponse(struct soap*, _WhosOn__FindLogonEventResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__WhosOn__FindLogonEventResponse(struct soap*, _WhosOn__FindLogonEventResponse*);
    @endcode

  - <FindLogonEvents> @ref _WhosOn__FindLogonEvents
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__WhosOn__FindLogonEvents(struct soap*, _WhosOn__FindLogonEvents*);
    // Writer (returns SOAP_OK on success):
    soap_write__WhosOn__FindLogonEvents(struct soap*, _WhosOn__FindLogonEvents*);
    @endcode

  - <FindLogonEventsResponse> @ref _WhosOn__FindLogonEventsResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__WhosOn__FindLogonEventsResponse(struct soap*, _WhosOn__FindLogonEventsResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__WhosOn__FindLogonEventsResponse(struct soap*, _WhosOn__FindLogonEventsResponse*);
    @endcode

*/

/* End of service.h */
